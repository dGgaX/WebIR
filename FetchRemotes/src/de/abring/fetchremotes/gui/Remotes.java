/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.abring.fetchremotes.gui;

import de.abring.rxtx.SerialConnection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author Karima
 */
public class Remotes extends javax.swing.JInternalFrame {

    private Object [] [] commands = new Object [][] {
            {"Power"},
            {"Source"},
            {"P+"},
            {"P-"},
            {"V+"},
            {"V-"},
            {"Mute"},
            {"Text"},
            {"Red"},
            {"Green"},
            {"Yellow"},
            {"Blue"},
            {"1"},
            {"2"},
            {"3"},
            {"4"},
            {"5"},
            {"6"},
            {"7"},
            {"8"},
            {"9"},
            {"0"}
        };
    private final DefaultTableModel model = new DefaultTableModel(
        commands,
        new String [] {
            "Command"
        }
    );
    private final FetchRemotes parent;
    private SerialConnection serialConnection;
    
    /**
     * Creates new form Remotes
     * @param parent
     * @param serialConnection
     */
    public Remotes(FetchRemotes parent, SerialConnection serialConnection) {
        initComponents();
        this.jTbl.setModel(model);
        this.jTbl.changeSelection(0, 1, false, false);
        addRemote();
        this.parent = parent;
        this.serialConnection = serialConnection;
    }
    
    public JSONArray getJSONArray() {
        JSONArray all = new JSONArray();
        
        for (int c = 1; c < this.jTbl.getColumnCount(); c++) {

            JSONArray remote = new JSONArray();
            
            for (int r = 0; r < this.jTbl.getRowCount(); r++) {
                
                JSONArray command = (JSONArray) this.jTbl.getValueAt(r, c);
                
                remote.put(command);
                
            }
            
            all.put(remote);
            
        }
        
        return all;
    }
    
    public void setTextAtSelection(JSONArray input) {
        int row = this.jTbl.getSelectedRow();
        int column = this.jTbl.getSelectedColumn();
        if (column == 0) {
            column++;
            this.jTbl.changeSelection(row, column, false, false);
        }
        this.jTbl.setValueAt(input, row, column);
        row++;
        if (row >= this.jTbl.getRowCount()) {
            column++;
            row = 0;
        }
        if (column >= this.jTbl.getColumnCount()) {
            column = 1;
        }
        this.jTbl.changeSelection(row, column, false, false);
    }

    public void setTextAtRow(JSONArray input, int row) {
        int column = this.jTbl.getSelectedColumn();
        if (column == 0) {
            column++;
            this.jTbl.changeSelection(row, column, false, false);
        }
        this.jTbl.setValueAt(input, row, column);
        row++;
        if (row >= this.jTbl.getRowCount()) {
            column++;
            row = 0;
        }
        if (column >= this.jTbl.getColumnCount()) {
            column = 1;
        }
        this.jTbl.changeSelection(row, column, false, false);
    }

    public final void addRemote() {
        String response = JOptionPane.showInputDialog(null,
            "What is the name of the Remote?",
            "Enter the name",
            JOptionPane.QUESTION_MESSAGE);
        model.addColumn(response);
        this.jTbl.changeSelection(0, this.jTbl.getColumnCount() - 1, false, false);
    }
    
    public final void removeRemote() {
        int index = this.jTbl.getSelectedColumn();
        if (index == 0)
            return;
        this.jTbl.changeSelection(0, 0, false, false);
        
        TableColumnModel cm = this.jTbl.getColumnModel();
        cm.removeColumn(cm.getColumn(index));
    }
    
    public final void wizard() {
        Wizard wizard = new Wizard(this, true, this.commands, this.serialConnection);
        wizard.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSclPneTbl = new javax.swing.JScrollPane();
        jTbl = new javax.swing.JTable();
        jPne = new javax.swing.JPanel();
        jBtnAddRemote = new javax.swing.JButton();
        jBtnRemoveRemote = new javax.swing.JButton();
        jBtnWizard = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Remote");

        jTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Power"},
                {"Source"},
                {"P+"},
                {"P-"},
                {"V+"},
                {"V-"},
                {"Mute"},
                {"Text"},
                {"Red"},
                {"Green"},
                {"Yellow"},
                {"Blue"},
                {"1"},
                {"2"},
                {"3"},
                {"4"},
                {"5"},
                {"6"},
                {"7"},
                {"8"},
                {"9"},
                {"0"}
            },
            new String [] {
                "Command"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jSclPneTbl.setViewportView(jTbl);

        jBtnAddRemote.setText("Add");
        jBtnAddRemote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddRemoteActionPerformed(evt);
            }
        });

        jBtnRemoveRemote.setText("Remove");
        jBtnRemoveRemote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRemoveRemoteActionPerformed(evt);
            }
        });

        jBtnWizard.setText("Wizard");
        jBtnWizard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnWizardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPneLayout = new javax.swing.GroupLayout(jPne);
        jPne.setLayout(jPneLayout);
        jPneLayout.setHorizontalGroup(
            jPneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtnWizard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnRemoveRemote)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnAddRemote)
                .addContainerGap())
        );
        jPneLayout.setVerticalGroup(
            jPneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPneLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAddRemote)
                    .addComponent(jBtnRemoveRemote)
                    .addComponent(jBtnWizard))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSclPneTbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSclPneTbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAddRemoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddRemoteActionPerformed
        addRemote();
    }//GEN-LAST:event_jBtnAddRemoteActionPerformed

    private void jBtnRemoveRemoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRemoveRemoteActionPerformed
        removeRemote();
    }//GEN-LAST:event_jBtnRemoveRemoteActionPerformed

    private void jBtnWizardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnWizardActionPerformed
        wizard();
    }//GEN-LAST:event_jBtnWizardActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAddRemote;
    private javax.swing.JButton jBtnRemoveRemote;
    private javax.swing.JButton jBtnWizard;
    private javax.swing.JPanel jPne;
    private javax.swing.JScrollPane jSclPneTbl;
    private javax.swing.JTable jTbl;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the serialConnection
     */
    public SerialConnection getSerialConnection() {
        return serialConnection;
    }

    /**
     * @param serialConnection the serialConnection to set
     */
    public void setSerialConnection(SerialConnection serialConnection) {
        this.serialConnection = serialConnection;
    }

    /**
     * @return the parent
     */
    public FetchRemotes getFRParent() {
        return parent;
    }

    /**
     * @return the jTbl
     */
    public javax.swing.JTable getjTbl() {
        return jTbl;
    }
}
